name: CI Pipeline
 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30 
    
    steps:
    - uses: actions/checkout@v3
 
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          wget \
          cmake \
          automake \
          libtool \
          pkg-config \
          gfortran
 
    - name: Build TA-Lib with patches 
      run: |
        # 下载源码
        wget -O ta-lib.tar.gz  https://downloads.sourceforge.net/project/ta-lib/ta-lib/0.4.0/ta-lib-0.4.0-src.tar.gz 
        tar -xzf ta-lib.tar.gz  
        cd ta-lib/
        
        # 关键修复1：禁用并行编译 
        find . -type f -name "Makefile*" -exec sed -i 's/make -j/make /g' {} +
        find . -type f -name "configure*" -exec sed -i 's/MAKE="make -j/MAKE="make /g' {} +
        
        # 关键修复2：忽略编译警告
        export CFLAGS="-Wno-error=format-security -O2"
        export CXXFLAGS="-Wno-error=format-security -O2"
        
        ./configure \
          --prefix=/usr \
          --disable-static \
          --enable-shared \
          --disable-dependency-tracking 
        
        # 单线程编译 
        make -j1 
        sudo make install 
        sudo ldconfig
 
    - name: Set up Python
      uses: actions/setup-python@v4 
      with:
        python-version: '3.11'
 
    - name: Install Python TA-Lib 
      run: |
        python -m pip install --upgrade pip wheel 
        pip install numpy==1.24.3
        pip install Cython==3.0.0
        
        TA_LIBRARY_PATH=/usr/lib \
        TA_INCLUDE_PATH=/usr/include \
        pip install TA-Lib==0.4.24 \
          --global-option=build_ext \
          --global-option="-L/usr/lib" \
          --global-option="-I/usr/include" \
          --no-cache-dir \
          --no-build-isolation 
 
    - name: Verify installation
      run: |
        python -c "import talib; print('TA-Lib successfully imported')"
        python -c "from talib import RSI, MACD; print('Technical indicators working')"