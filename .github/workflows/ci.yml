name: QuantBot CI & Packaging 
 
on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]
 
jobs:
  build-and-package:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
    - uses: actions/checkout@v3 
 
    - name: Install TA-Lib dependencies 
      run: |
        choco install -y ta-lib --version=0.4.0.1
        echo "TA_LIBRARY_PATH=C:\Program Files\ta-lib\lib" >> $env:GITHUB_ENV 
        echo "TA_INCLUDE_PATH=C:\Program Files\ta-lib\include" >> $env:GITHUB_ENV
 
    - name: Set up Python ${{ matrix.python-version  }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version  }}
 
    - name: Install Python dependencies 
      run: |
        python -m pip install --upgrade pip 
        pip install numpy Cython TA-Lib 
        pip install -r requirements.txt  
        pip install pyinstaller
 
    - name: Package with PyInstaller 
      run: |
        # Create minimal build.spec  without the here-string 
        echo "# -*- mode: python -*-" > build.spec  
        echo "from PyInstaller.building.build_main  import Analysis, EXE, PYZ" >> build.spec  
        echo "a = Analysis(['main.py'],  binaries=[], datas=[], hiddenimports=[])" >> build.spec  
        echo "pyz = PYZ(a.pure)"  >> build.spec 
        echo "exe = EXE(pyz, a.scripts,  name='QuantBot', console=True)" >> build.spec 
        
        # Run PyInstaller 
        pyinstaller --noconfirm --onefile --windowed build.spec  
 
    - name: Upload artifact
      uses: actions/upload-artifact@v3 
      with:
        name: QuantBot-Windows
        path: dist/QuantBot.exe  