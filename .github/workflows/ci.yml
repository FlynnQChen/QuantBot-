name: CI Pipeline 
 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    
    steps:
    - uses: actions/checkout@v3 
 
    - name: Install system dependencies 
      run: |
        sudo apt-get update 
        sudo apt-get install -y \
          build-essential \
          wget \
          cmake \
          automake \
          libtool \
          pkg-config \
          gfortran
 
    - name: Build TA-Lib with comprehensive fixes
      run: |
        # 下载源码（使用GitHub官方仓库确保完整性）
        wget -O ta-lib.tar.gz  https://github.com/TA-Lib/ta-lib/archive/refs/tags/v0.4.0.tar.gz 
        mkdir -p ta-lib-src 
        tar -xzf ta-lib.tar.gz  -C ta-lib-src --strip-components=1
        cd ta-lib-src
        
        # 关键修复1：彻底禁用所有并行编译 
        find . -type f \( -name "Makefile*" -o -name "configure*" \) \
          -exec sed -i 's/-j[0-9]*//g; s/MAKE="make -j/MAKE="make /g' {} \;
        
        # 关键修复2：修复依赖跟踪系统 
        sed -i 's/depcomp//g' configure 
        sed -i 's/MAKEFLAGS=-j/MAKEFLAGS=/' Makefile.in  
        
        # 生成构建系统
        autoreconf -vif || {
          aclocal 
          autoheader
          automake --add-missing
          autoconf 
        }
        
        # 配置编译选项 
        ./configure \
          --prefix=/usr \
          --disable-static \
          --enable-shared \
          --disable-dependency-tracking
        
        # 单线程编译（彻底避免竞争条件）
        make -j1 V=1 
        sudo make install
        sudo ldconfig 
 
    - name: Install Python TA-Lib 
      run: |
        python -m pip install --upgrade pip wheel
        pip install numpy==1.24.3 
        pip install Cython==3.0.0
        
        # 使用官方维护的fork 
        TA_LIBRARY_PATH=/usr/lib \
        TA_INCLUDE_PATH=/usr/include \
        pip install git+https://github.com/mrjbq7/ta-lib.git@TA_Lib-0.4.24  \
          --global-option=build_ext \
          --global-option="-L/usr/lib" \
          --global-option="-I/usr/include" \
          --no-cache-dir \
          --no-build-isolation 
 
    - name: Verify installation
      run: |
        python -c "import talib; print(f'TA-Lib {talib.__version__} loaded')"
        python -c "from talib import RSI, MACD; print('Indicators test passed')"
        ldconfig -p | grep ta_lib
        