name: QuantBot CI & Packaging 
 
on:
  push:
    branches: [main]
  pull_request:
    branches: [main] 
 
jobs:
  build-and-package:
    runs-on: windows-latest 
    steps:
    - name: Configure Git
      run: |
        git config --global core.protectNTFS  false
        git config --global core.longpaths  true 
 
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          *
          !configs/strategy_presets/
        fetch-depth: 1 
 
    - name: Copy strategy files safely 
      run: |
        mkdir -p configs/strategy_presets
        cp configs/strategy_presets/*.yaml configs/strategy_presets/ 2>/dev/null || true 
 
    - name: Install TA-Lib
      run: |
        choco install -y ta-lib --version=0.4.0.1
        echo "TA_LIBRARY_PATH=C:\Program Files\ta-lib\lib" >> $env:GITHUB_ENV 
        echo "TA_INCLUDE_PATH=C:\Program Files\ta-lib\include" >> $env:GITHUB_ENV
 
    - name: Setup Python 
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install numpy Cython TA-Lib 
        pip install -r requirements.txt 
        pip install pyinstaller 
 
    - name: Build with PyInstaller 
      run: |
        # 使用安全路径构建 
        $spec = @'
# -*- mode: python -*-
a = Analysis(
    ['main.py'], 
    binaries=[],
    datas=[('configs/strategy_presets/*.yaml', 'configs/strategy_presets')],
    hiddenimports=[]
)
exe = EXE(a.scripts,  name='QuantBot', console=True)
'@ 
        $spec | Out-File -FilePath build.spec  -Encoding utf8
        pyinstaller --noconfirm --onefile build.spec 
 
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: QuantBot-Windows 
        path: dist/QuantBot.exe 