name: CI Pipeline 
 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3 
 
    - name: Install system dependencies 
      run: |
        sudo apt-get update 
        sudo apt-get install -y \
          build-essential \
          wget \
          cmake \
          automake \
          libtool \
          pkg-config \
          gfortran
 
    - name: Download and build TA-Lib (robust version)
      run: |
        # 清理可能存在的旧文件
        rm -f ta-lib-*.tar.gz  
        
        # 使用固定文件名下载 
        wget -O ta-lib-src.tar.gz  \
          https://github.com/TA-Lib/ta-lib/archive/refs/tags/v0.4.0.tar.gz  ||
        wget -O ta-lib-src.tar.gz  \
          https://downloads.sourceforge.net/project/ta-lib/ta-lib/0.4.0/ta-lib-0.4.0-src.tar.gz 
        
        # 解压到固定目录名 
        mkdir -p ta-lib-src
        tar -xzf ta-lib-src.tar.gz  -C ta-lib-src --strip-components=1 
        
        cd ta-lib-src 
        
        # 自动修复构建系统 
        if [ ! -f configure ]; then
          autoreconf -fi
        fi 
        
        # 应用关键补丁 
        sed -i.bak  's/make -j\${MAKE_JOBS}/make/' configure Makefile.*
        
        ./configure \
          --prefix=/usr \
          --build=$(uname -m)-linux-gnu \
          --disable-static \
          --enable-shared 
        
        make -j1
        sudo make install 
        sudo ldconfig
 
    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
 
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install numpy==1.24.3 
        pip install Cython==3.0.0
        TA_LIBRARY_PATH=/usr/lib TA_INCLUDE_PATH=/usr/include \
          pip install TA-Lib==0.4.24 \
          --global-option=build_ext \
          --global-option="-L/usr/lib" \
          --global-option="-I/usr/include" \
          --no-cache-dir \
          --no-build-isolation 
 
    - name: Verify installation
      run: |
        python -c "import talib; print('TA-Lib loaded successfully')"
        python -c "from talib import RSI; print('RSI function available')"