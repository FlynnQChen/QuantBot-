name: CI Pipeline
 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
jobs:
  build:
    runs-on: ubuntu-latest 
    timeout-minutes: 30 
    
    steps:
    - uses: actions/checkout@v3
 
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          wget \
          cmake \
          automake \
          libtool \
          pkg-config \
          gfortran 
 
    - name: Build TA-Lib C library (with fixes)
      run: |
        # 从GitHub官方仓库下载（避免SourceForge问题）
        wget -O ta-lib.tar.gz  https://github.com/TA-Lib/ta-lib/archive/refs/tags/v0.4.0.tar.gz  || \
        wget -O ta-lib.tar.gz  https://downloads.sourceforge.net/project/ta-lib/ta-lib/0.4.0/ta-lib-0.4.0-src.tar.gz 
        
        tar -xzf ta-lib.tar.gz  
        cd ta-lib-* 
        
        # 确保包含所有必要文件
        if [ ! -f include/ta_defs.h ]; then 
          echo "Error: TA-Lib source is incomplete!"
          exit 1 
        fi
        
        # 修复构建系统 
        ./autogen.sh  || (autoreconf -fi && ./configure)
        
        ./configure \
          --prefix=/usr \
          --disable-static \
          --enable-shared
        
        make -j$(nproc)
        sudo make install 
        sudo ldconfig
 
    - name: Install Python TA-Lib (official maintained fork)
      run: |
        python -m pip install --upgrade pip wheel
        pip install numpy==1.24.3 
        pip install Cython==3.0.0
        
        # 使用官方维护的fork 
        TA_LIBRARY_PATH=/usr/lib \
        TA_INCLUDE_PATH=/usr/include \
        pip install git+https://github.com/mrjbq7/ta-lib.git@TA_Lib-0.4.24  \
          --global-option=build_ext \
          --global-option="-L/usr/lib" \
          --global-option="-I/usr/include" \
          --no-cache-dir \
          --no-build-isolation
 
    - name: Verify installation 
      run: |
        python -c "import talib; print(f'TA-Lib {talib.__version__} loaded')"
        python -c "import talib; print('Available functions:', len(talib.get_functions()))" 
        python -c "from talib import RSI, MACD; print('RSI and MACD indicators working')"